version: "3.4"

x-php-environment: &php-environnement
  PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
  DB_HOST: $DB_HOST
  DB_USER: root
  DB_PASSWORD: $DB_ROOT_PASSWORD
  DB_DRIVER: $DB_DRIVER
  PHP_FPM_USER: wodby
  PHP_FPM_GROUP: wodby
  COLUMNS: 80 # Set 80 columns for docker exec -it.
  # Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
  PHP_IDE_CONFIG: serverName=cli
  PHP_XDEBUG: 1
  PHP_XDEBUG_DEFAULT_ENABLE: 1
  PHP_XDEBUG_IDEKEY: ide
  PHP_XDEBUG_REMOTE_AUTOSTART: 0
  # In the following two variables, if "remote connect back" is set to 1, then
  # we don't have to specify remote host when there is a HTTP request, because
  # the server knows where did the request come from. However it does not work
  # in micro services when an application sends a HTTP request to another and we
  # want to debug both requests. Neither for CLI debugging running inside a PHP
  # container as there is nothing initiated from the host (where the IDE is).
  # In a Linux host, the IP is 172.17.0.1 (seen from the PHP container). It
  # might be the same for other environments.
  PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
  PHP_XDEBUG_REMOTE_HOST: 172.17.0.1
  PHP_XDEBUG_REMOTE_LOG: /tmp/php-xdebug.log
  PHP_XHPROF: 1
  XDG_CONFIG_HOME: /var/www/conf
  HISTFILE: /var/www/conf/.bash_history
  CACHE_PREFIX: /var/www/conf
x-php-volumes: &php-volumes
  - $DOCKER_PATH_WEB:/var/www
  - $DOCKER_PATH_WEB/cache:/mnt/files
  - $SSH_AUTH_SOCK:/ssh-agent
x-php-base: &php-base
  environment: *php-environnement
  volumes: *php-volumes

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: drupal_mariadb
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_INTERACTIVE_TIMEOUT: 3600
    volumes:
      - $DOCKER_PATH_MYSQL:/var/lib/mysql

  php5.6:
    <<: *php-base
    build:
      context: ./php
      args:
        PHP_VERSION: 5.6
        WODBY_VERSION: $WODBY_VERSION
    container_name: drupal_php56

  php7.1:
    <<: *php-base
    build:
      context: ./php
      args:
        PHP_VERSION: 7.1
        WODBY_VERSION: $WODBY_VERSION
    container_name: drupal_php71

  php7.2:
    <<: *php-base
    build:
      context: ./php
      args:
        PHP_VERSION: 7.2
        WODBY_VERSION: $WODBY_VERSION
    container_name: drupal_php72

  php7.3:
    <<: *php-base
    build:
      context: ./php
      args:
        PHP_VERSION: 7.3
        WODBY_VERSION: $WODBY_VERSION
    container_name: drupal_php73

  mailhog:
    image: mailhog/mailhog
    container_name: drupal_mailhog
    labels:
      - "traefik.http.services.drupal_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.drupal_mailhog.rule=Host(`mailhog.docker.localhost`)"

  apache:
    build: './apache/'
    container_name: "drupal_apache"
    depends_on:
      - php5.6
      - php7.1
      - php7.2
      - php7.3
    labels:
      - "traefik.http.routers.drupal_apache.rule=HostRegexp(`{subdomain:.+}.docker.localhost`)"
      - "traefik.http.routers.drupal_apache.priority=1"
    volumes:
      - $DOCKER_PATH_WEB:/var/www

#  redis:
#    container_name: "drupal_redis"
#    image: wodby/redis:$REDIS_TAG

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: "drupal_pma"
    environment:
      PMA_HOST: $DB_HOST
      PMA_USER: root
      PMA_PASSWORD: $DB_ROOT_PASSWORD
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    labels:
      - "traefik.http.routers.drupal_pma.rule=Host(`pma.docker.localhost`)"
    volumes:
      - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php

#  solr:
#    image: wodby/solr:$SOLR_TAG
#    container_name: "drupal_solr"
#    environment:
#      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
#      SOLR_HEAP: 1024m
#    labels:
#      - "traefik.http.routers.drupal_solr.rule=Host(`solr.docker.localhost`)"
#
#  memcached:
#    container_name: "drupal_memcached"
#    image: wodby/memcached:$MEMCACHED_TAG

#  rsyslog:
#    container_name: "drupal_rsyslog"
#    image: wodby/rsyslog:$RSYSLOG_TAG

  node:
    build: ./node
    container_name: "drupal_node"
    volumes:
      - $DOCKER_PATH_WEB:/var/www

#  blackfire:
#    image: blackfire/blackfire
#    container_name: "drupal_blackfire"
#    environment:
#      BLACKFIRE_SERVER_ID: XXXXX
#      BLACKFIRE_SERVER_TOKEN: YYYYY

#  webgrind:
#    image: wodby/webgrind:$WEBGRIND_TAG
#    container_name: "drupal_webgrind"
#    environment:
#      WEBGRIND_PROFILER_DIR: /mnt/files/xdebug/profiler
#    labels:
#      - "traefik.http.routers.drupal_webgrind.rule=Host(`webgrind.docker.localhost`)"
#    volumes:
#      - files:/mnt/files

#  elasticsearch:
#    image: wodby/elasticsearch:$ELASTICSEARCH_TAG
#    environment:
#      ES_JAVA_OPTS: "-Xms500m -Xmx500m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1

#  kibana:
#    image: wodby/kibana:$KIBANA_TAG
#    depends_on:
#      - elasticsearch
#    labels:
#      - "traefik.http.services.drupal_kibana.loadbalancer.server.port=5601"
#      - "traefik.http.routers.drupal_kibana.rule=Host(`kibana.docker.localhost`)"

#  opensmtpd:
#    container_name: "drupal_opensmtpd"
#    image: wodby/opensmtpd:$OPENSMTPD_TAG

  xhprof:
    image: wodby/xhprof:$XHPROF_TAG
    container_name: drupal_xhprof
    restart: always
    volumes:
     - $DOCKER_PATH_WEB/cache:/mnt/files
    labels:
      - "traefik.http.routers.drupal_xhprof.rule=Host(`xhprof.docker.localhost`)"

  portainer:
    image: portainer/portainer
    container_name: "drupal_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.drupal_portainer.rule=Host(`portainer.docker.localhost`)"

  traefik:
    image: traefik:v2.0
    container_name: "drupal_traefik"
    command: --api.insecure=true --providers.docker --log.level=DEBUG
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
