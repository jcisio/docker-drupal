version: "3.4"

x-php-environment: &php-environnement
  PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
  DB_HOST: $DB_HOST
  DB_USER: root
  DB_PASSWORD: $DB_ROOT_PASSWORD
  DB_DRIVER: $DB_DRIVER
  MYSQL_PWD: $DB_ROOT_PASSWORD
  MYSQL_HOST: $DB_HOST
  PHP_FPM_USER: wodby
  PHP_FPM_GROUP: wodby
  PHP_DATE_TIMEZONE: Europe/Paris
  COLUMNS: 80 # Set 80 columns for docker exec -it.
  # Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
  PHP_IDE_CONFIG: serverName=cli
  PHP_XDEBUG: 1
  PHP_XDEBUG_DEFAULT_ENABLE: 1
  PHP_XDEBUG_IDEKEY: ide
  PHP_XDEBUG_REMOTE_AUTOSTART: 1
  PHP_XDEBUG_MAX_NESTING_LEVEL: 9999
  # Xdebug 3
  PHP_XDEBUG_MODE: "develop,debug"
  PHP_XDEBUG_START_WITH_REQUEST: "yes"
  # In the following two variables, if "remote connect back" is set to 1, then
  # we don't have to specify remote host when there is a HTTP request, because
  # the server knows where did the request come from. However it does not work
  # in micro services when an application sends a HTTP request to another and we
  # want to debug both requests. Neither for CLI debugging running inside a PHP
  # container as there is nothing initiated from the host (where the IDE is).
  # In a Linux host, the IP is 172.17.0.1 (seen from the PHP container). It
  # might be the same for other environments.
  PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
  PHP_XDEBUG_REMOTE_HOST: 172.17.0.1
  PHP_XDEBUG_REMOTE_LOG: /tmp/php-xdebug.log
  PHP_XHPROF: 1
  XDG_CONFIG_HOME: /var/www/cache
  HISTFILE: /var/www/cache/.bash_history
  CACHE_PREFIX: /var/www/cache
x-php-volumes: &php-volumes
  - $DOCKER_PATH_WEB:/var/www
  - $DOCKER_PATH_WEB/cache:/mnt/files
  - $SSH_AUTH_SOCK:/ssh-agent
  - $DOCKER_PATH_WEB/conf/ca-certificates:/usr/local/share/ca-certificates
  - $DOCKER_PATH_WEB/conf/drush-module:/home/wodby/.drush/modules
x-php-base: &php-base
  environment: *php-environnement
  volumes: *php-volumes
  labels:
    - traefik.enable=false

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: drupal_mariadb
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_INTERACTIVE_TIMEOUT: $MYSQL_INTERACTIVE_TIMEOUT
      MYSQL_WAIT_TIMEOUT: $MYSQL_WAIT_TIMEOUT
    labels:
      - traefik.enable=false
    volumes:
      - $DOCKER_PATH_VOLUMES/mysql:/var/lib/mysql

  postgres:
    image: postgres:13
    container_name: drupal_postgres
    environment:
      POSTGRES_PASSWORD: $DB_ROOT_PASSWORD
    labels:
      - traefik.enable=false

  php5.6:
    <<: *php-base
    build:
      context: ./php
      dockerfile: Dockerfile56
    container_name: drupal_php56

  # php7.0:
  #   <<: *php-base
  #   build:
  #     context: ./php
  #     dockerfile: Dockerfile70
  #   container_name: drupal_php70

  php7.1:
    <<: *php-base
    build:
      context: ./php
      dockerfile: Dockerfile71
    container_name: drupal_php71

  # php7.2:
  #   <<: *php-base
  #   build:
  #     context: ./php
  #     args:
  #       PHP_VERSION: 7.2
  #   container_name: drupal_php72

  php7.3:
    <<: *php-base
    build:
      context: ./php
      args:
        PHP_VERSION: 7.3
    container_name: drupal_php73

  php7.4:
    <<: *php-base
    build:
      context: ./php
      args:
        PHP_VERSION: 7.4
    container_name: drupal_php74

  php8.0:
    <<: *php-base
    build:
      context: ./php
      args:
        PHP_VERSION: 8.0
    container_name: drupal_php80

  mailhog:
    image: mailhog/mailhog
    container_name: drupal_mailhog
    labels:
      - "traefik.http.services.drupal_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.drupal_mailhog.rule=Host(`mailhog.$DOCKER_HOST_LOCAL`)"

  adminer:
    image: adminer
    container_name: drupal_adminer
    labels:
      - "traefik.http.routers.drupal_adminer.rule=Host(`adminer.$DOCKER_HOST_LOCAL`)"

  pma:
    image: phpmyadmin/phpmyadmin:5
    container_name: drupal_pma
    environment:
      PMA_HOST: $DB_HOST
      PMA_USER: root
      PMA_PASSWORD: $DB_ROOT_PASSWORD
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    labels:
      - "traefik.http.routers.drupal_pma.rule=Host(`pma.$DOCKER_HOST_LOCAL`)"
    volumes:
      - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php

  solr8:
    image: solr:8
    container_name: "drupal_solr8"
    labels:
      - "traefik.http.routers.drupal_solr8.rule=Host(`solr8.$DOCKER_HOST_LOCAL`)"
    volumes:
      - $DOCKER_PATH_WEB:/var/www
      - $DOCKER_PATH_WEB/cache/solr8.cores:/var/solr/data

  solr6:
    image: solr:6
    container_name: "drupal_solr6"
    labels:
      - "traefik.http.routers.drupal_solr6.rule=Host(`solr6.$DOCKER_HOST_LOCAL`)"
    volumes:
      - $DOCKER_PATH_WEB:/var/www
      - $DOCKER_PATH_WEB/cache/solr6.cores:/opt/solr/server/solr/mycores

  solr5:
    image: solr:5
    container_name: "drupal_solr5"
    labels:
      - "traefik.http.routers.drupal_solr5.rule=Host(`solr5.$DOCKER_HOST_LOCAL`)"
    volumes:
      - $DOCKER_PATH_WEB:/var/www
      - $DOCKER_PATH_WEB/cache/solr5.cores:/opt/solr/server/solr/mycores

  solr4:
    image: geerlingguy/solr:4.x
    container_name: "drupal_solr4"
    labels:
      - "traefik.http.routers.drupal_solr4.rule=Host(`solr4.$DOCKER_HOST_LOCAL`)"
    expose:
      - "8983"
    volumes:
      - $DOCKER_PATH_WEB:/var/www
      - $DOCKER_PATH_WEB/cache/solr4.cores:/opt/solr/example/solr/mycores

  memcached:
    container_name: "drupal_memcached"
    image: memcached:1-alpine
    labels:
      - traefik.enable=false

  redis:
    container_name: drupal_redis
    image: redis:6-alpine
    labels:
      - traefik.enable=false

  node:
    build: ./node
    container_name: "drupal_node"
    labels:
      - traefik.enable=false
    volumes:
      - $DOCKER_PATH_WEB:/var/www

  ruby:
    build: ./ruby
    container_name: "drupal_ruby"
    labels:
      - traefik.enable=false
    volumes:
      - $DOCKER_PATH_WEB:/var/www

  xhprof:
    build:
      context: ./xhprof
      args:
        XHPROF_VER: 2.3.5
    container_name: drupal_xhprof
    restart: always
    volumes:
      - $DOCKER_PATH_WEB/cache:/mnt/files
    labels:
      - "traefik.http.routers.drupal_xhprof.rule=Host(`xhprof.$DOCKER_HOST_LOCAL`)"

  apache:
    build: './apache/'
    container_name: "drupal_apache"
    depends_on:
      - php5.6
      - php7.4
    labels:
      - traefik.http.routers.drupal_apache_https.rule=HostRegexp(`{subdomain:.+}.$DOCKER_HOST_LOCAL`)
      - traefik.http.routers.drupal_apache_https.tls=true
      - traefik.http.routers.drupal_apache_https.entrypoints=websecure
      - traefik.http.routers.drupal_apache_https.priority=-1
      - traefik.http.routers.drupal_apache_http.rule=HostRegexp(`{subdomain:.+}.$DOCKER_HOST_LOCAL`)
      - traefik.http.routers.drupal_apache_http.entrypoints=web
      - traefik.http.routers.drupal_apache_http.priority=-1
    volumes:
      - $DOCKER_PATH_WEB:/var/www

  portainer:
    image: portainer/portainer
    container_name: "drupal_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.http.routers.drupal_portainer.rule=Host(`portainer.$DOCKER_HOST_LOCAL`)

  traefik:
    image: traefik:v2.5
    container_name: "drupal_traefik"
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.file.directory=/etc/traefik/dynamic_conf
    ports:
      - '127.0.0.1:80:80'
      - '127.0.0.1:8080:8080'
      - '127.0.0.1:443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/config.yml:/etc/traefik/dynamic_conf/conf.yml:ro
      - ./apache/ssl/certs:/etc/certs:ro
